(include_subdirs unqualified)

(executable
 (name main)
 (public_name read-dwarf)
 (modules main)
 (libraries rd))

(library
 (name rd)
 (public_name read-dwarf)
 (wrapped false)
 (inline_tests
  (backend qtest.lib)
  (deps (universe)))
 (modules :standard \ main bin2share)
 (libraries linksem isla-lang cmdliner pprint res ocamlgraph toml uutf))

(env
 (dev
  (flags
   (:standard -warn-error -A -w -27 -w -26))))

(rule
 (target smtIntro.ml)
 (deps intro.smt2)
 (action
  (write-file smtIntro.ml "let intro = \"%{read:intro.smt2}\"\n")))

(rule
 (target config.ml)
 (action
  (copy# ../config.ml config.ml)))

; HACK: configPre is config with all module configuration removed, which means it can
; used in modules that are indirectly used by the config.
; In particular configPre do not contain the Arch module and thus can be used in
; modules in the archs folder

(rule
 (target configPre.ml)
 (deps config.awk ../config.ml)
 (action
  (with-stdout-to
   configPre.ml
   (run awk -f config.awk ../config.ml))))

(rule
 (target bin2share.ml)
 (action
  (write-file bin2share.ml
    "(Sys.argv.(1) |> Filename.dirname |> Filename.dirname) ^ Sys.argv.(2) |> print_string;;")))

(rule
 (target ott.path)
 (deps bin2share.ml)
 (action
  (ignore-stderr
   (with-stdout-to
    ott.path
    (system "opam var ott:share || ocaml bin2share.ml %{bin:ott} /share/ott")))))

(rule
 (target ottlib.mly)
 (action
  (copy "%{read-lines:ott.path}/menhir_library_extra.mly" ottlib.mly)))

(rule
 (target isla-lang.path)
 (deps bin2share.ml)
 (action
  (ignore-stderr
   (with-stdout-to
    isla-lang.path
    (system
      "opam var isla-lang:share || ocaml bin2share.ml %{bin:isla-lang} /share/isla-lang")))))

(rule
 (target isla_lang.ott)
 (action
  (copy "%{read-lines:isla-lang.path}/isla_lang.ott" isla_lang.ott)))

(rule
 (target ast_base.ott)
 (deps isla_lang.ott extract_sections.awk)
 (action
  (with-stdout-to
   ast_base.ott
   (system
     "awk -v SECS='terminals,annotations,types,bool,operations' -f extract_sections.awk isla_lang.ott"))))

(rule
 (targets astParser.mly astLexer.mll astOtt.ml astParser_pp.ml)
 (deps ast.ott ast_base.ott)
 (action
  (run ott -show_sort false -quotient_rules false -aux_style_rules false
    -merge true -i ast.ott -i ast_base.ott -o astParser.mly -o astLexer.mll
    -o astOtt.ml)))

(menhir
 (modules astParser ottlib)
 (merge_into astParser)
 (flags --unused-token BV --unused-token BVI --unused-token VVAR)
 (infer true))

(ocamllex
 (modules astLexer))
